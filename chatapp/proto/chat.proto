syntax = "proto3";
package chat;

// --- Core models ---
message User { string id = 1; string display_name = 2; }

// --- Control RPCs (unary) ---
message RegisterRequest { string display_name = 1; }
message RegisterResponse { string user_id = 1; }

message SearchUsersRequest { string query = 1; }            // placeholder for later
message SearchUsersResponse { repeated User users = 1; }     // placeholder for later

// --- Chat stream (bidi) ---
enum EventType { UNKNOWN = 0; SEND_DM = 1; SEND_GROUP = 2; SYSTEM = 3; ACK = 4; }

message ChatEnvelope {
  EventType type = 1;
  string from_user_id = 2;
  string to_user_id = 3;      // for DM (future step)
  string group_id = 4;        // for groups (future step)
  string message_id = 5;
  string text = 6;
  int64  sent_ts = 7;         // unix ms
}

service ChatService {
  rpc RegisterUser(RegisterRequest) returns (RegisterResponse);
  rpc SearchUsers(SearchUsersRequest) returns (SearchUsersResponse); // stubbed for now
  rpc OpenStream(stream ChatEnvelope) returns (stream ChatEnvelope);
}
