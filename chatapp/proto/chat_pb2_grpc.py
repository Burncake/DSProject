# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from chatapp.proto import chat_pb2 as chatapp_dot_proto_dot_chat__pb2

GRPC_GENERATED_VERSION = '1.76.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + ' but the generated code in chatapp/proto/chat_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class ChatServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RegisterUser = channel.unary_unary(
                '/chat.ChatService/RegisterUser',
                request_serializer=chatapp_dot_proto_dot_chat__pb2.RegisterRequest.SerializeToString,
                response_deserializer=chatapp_dot_proto_dot_chat__pb2.RegisterResponse.FromString,
                _registered_method=True)
        self.LoginUser = channel.unary_unary(
                '/chat.ChatService/LoginUser',
                request_serializer=chatapp_dot_proto_dot_chat__pb2.LoginRequest.SerializeToString,
                response_deserializer=chatapp_dot_proto_dot_chat__pb2.LoginResponse.FromString,
                _registered_method=True)
        self.SearchUsers = channel.unary_unary(
                '/chat.ChatService/SearchUsers',
                request_serializer=chatapp_dot_proto_dot_chat__pb2.SearchUsersRequest.SerializeToString,
                response_deserializer=chatapp_dot_proto_dot_chat__pb2.SearchUsersResponse.FromString,
                _registered_method=True)
        self.CreateGroup = channel.unary_unary(
                '/chat.ChatService/CreateGroup',
                request_serializer=chatapp_dot_proto_dot_chat__pb2.CreateGroupRequest.SerializeToString,
                response_deserializer=chatapp_dot_proto_dot_chat__pb2.CreateGroupResponse.FromString,
                _registered_method=True)
        self.JoinGroup = channel.unary_unary(
                '/chat.ChatService/JoinGroup',
                request_serializer=chatapp_dot_proto_dot_chat__pb2.JoinGroupRequest.SerializeToString,
                response_deserializer=chatapp_dot_proto_dot_chat__pb2.JoinGroupResponse.FromString,
                _registered_method=True)
        self.GetMessages = channel.unary_unary(
                '/chat.ChatService/GetMessages',
                request_serializer=chatapp_dot_proto_dot_chat__pb2.GetMessagesRequest.SerializeToString,
                response_deserializer=chatapp_dot_proto_dot_chat__pb2.GetMessagesResponse.FromString,
                _registered_method=True)
        self.GetUserGroups = channel.unary_unary(
                '/chat.ChatService/GetUserGroups',
                request_serializer=chatapp_dot_proto_dot_chat__pb2.GetUserGroupsRequest.SerializeToString,
                response_deserializer=chatapp_dot_proto_dot_chat__pb2.GetUserGroupsResponse.FromString,
                _registered_method=True)
        self.OpenStream = channel.stream_stream(
                '/chat.ChatService/OpenStream',
                request_serializer=chatapp_dot_proto_dot_chat__pb2.ChatEnvelope.SerializeToString,
                response_deserializer=chatapp_dot_proto_dot_chat__pb2.ChatEnvelope.FromString,
                _registered_method=True)


class ChatServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def RegisterUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoginUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchUsers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateGroup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def JoinGroup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMessages(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserGroups(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OpenStream(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ChatServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RegisterUser': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterUser,
                    request_deserializer=chatapp_dot_proto_dot_chat__pb2.RegisterRequest.FromString,
                    response_serializer=chatapp_dot_proto_dot_chat__pb2.RegisterResponse.SerializeToString,
            ),
            'LoginUser': grpc.unary_unary_rpc_method_handler(
                    servicer.LoginUser,
                    request_deserializer=chatapp_dot_proto_dot_chat__pb2.LoginRequest.FromString,
                    response_serializer=chatapp_dot_proto_dot_chat__pb2.LoginResponse.SerializeToString,
            ),
            'SearchUsers': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchUsers,
                    request_deserializer=chatapp_dot_proto_dot_chat__pb2.SearchUsersRequest.FromString,
                    response_serializer=chatapp_dot_proto_dot_chat__pb2.SearchUsersResponse.SerializeToString,
            ),
            'CreateGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateGroup,
                    request_deserializer=chatapp_dot_proto_dot_chat__pb2.CreateGroupRequest.FromString,
                    response_serializer=chatapp_dot_proto_dot_chat__pb2.CreateGroupResponse.SerializeToString,
            ),
            'JoinGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.JoinGroup,
                    request_deserializer=chatapp_dot_proto_dot_chat__pb2.JoinGroupRequest.FromString,
                    response_serializer=chatapp_dot_proto_dot_chat__pb2.JoinGroupResponse.SerializeToString,
            ),
            'GetMessages': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMessages,
                    request_deserializer=chatapp_dot_proto_dot_chat__pb2.GetMessagesRequest.FromString,
                    response_serializer=chatapp_dot_proto_dot_chat__pb2.GetMessagesResponse.SerializeToString,
            ),
            'GetUserGroups': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserGroups,
                    request_deserializer=chatapp_dot_proto_dot_chat__pb2.GetUserGroupsRequest.FromString,
                    response_serializer=chatapp_dot_proto_dot_chat__pb2.GetUserGroupsResponse.SerializeToString,
            ),
            'OpenStream': grpc.stream_stream_rpc_method_handler(
                    servicer.OpenStream,
                    request_deserializer=chatapp_dot_proto_dot_chat__pb2.ChatEnvelope.FromString,
                    response_serializer=chatapp_dot_proto_dot_chat__pb2.ChatEnvelope.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'chat.ChatService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('chat.ChatService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ChatService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def RegisterUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/RegisterUser',
            chatapp_dot_proto_dot_chat__pb2.RegisterRequest.SerializeToString,
            chatapp_dot_proto_dot_chat__pb2.RegisterResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def LoginUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/LoginUser',
            chatapp_dot_proto_dot_chat__pb2.LoginRequest.SerializeToString,
            chatapp_dot_proto_dot_chat__pb2.LoginResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SearchUsers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/SearchUsers',
            chatapp_dot_proto_dot_chat__pb2.SearchUsersRequest.SerializeToString,
            chatapp_dot_proto_dot_chat__pb2.SearchUsersResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/CreateGroup',
            chatapp_dot_proto_dot_chat__pb2.CreateGroupRequest.SerializeToString,
            chatapp_dot_proto_dot_chat__pb2.CreateGroupResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def JoinGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/JoinGroup',
            chatapp_dot_proto_dot_chat__pb2.JoinGroupRequest.SerializeToString,
            chatapp_dot_proto_dot_chat__pb2.JoinGroupResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetMessages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/GetMessages',
            chatapp_dot_proto_dot_chat__pb2.GetMessagesRequest.SerializeToString,
            chatapp_dot_proto_dot_chat__pb2.GetMessagesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetUserGroups(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/GetUserGroups',
            chatapp_dot_proto_dot_chat__pb2.GetUserGroupsRequest.SerializeToString,
            chatapp_dot_proto_dot_chat__pb2.GetUserGroupsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def OpenStream(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(
            request_iterator,
            target,
            '/chat.ChatService/OpenStream',
            chatapp_dot_proto_dot_chat__pb2.ChatEnvelope.SerializeToString,
            chatapp_dot_proto_dot_chat__pb2.ChatEnvelope.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
